class Contact:
    def __init__(self, name, phone, email, address):
        self.name = name
        self.phone = phone
        self.email = email
        self.address = address

class ContactBook:
    def __init__(self):
        self.contacts = []

    def add_contact(self, name, phone, email, address):
        contact = Contact(name, phone, email, address)
        self.contacts.append(contact)
        print(f"Contact '{name}' added successfully!")

    def view_contacts(self):
        if not self.contacts:
            print("No contacts in the contact book.")
        else:
            print("Contact List:")
            for index, contact in enumerate(self.contacts, start=1):
                print(f"{index}. Name: {contact.name} | Phone: {contact.phone}")

    def search_contacts(self, search_query):
        search_results = []
        for contact in self.contacts:
            if search_query.lower() in contact.name.lower() or search_query in contact.phone:
                search_results.append(contact)
        
        if not search_results:
            print("No matching contacts found.")
        else:
            print(f"Search results for '{search_query}':")
            for contact in search_results:
                print(f"Name: {contact.name} | Phone: {contact.phone}")

    def update_contact(self, name, phone, email, address):
        for contact in self.contacts:
            if contact.name.lower() == name.lower() and contact.phone == phone:
                contact.email = email
                contact.address = address
                print(f"Contact '{name}' updated successfully.")
                return
        print(f"Contact '{name}' with phone number '{phone}' not found.")

    def delete_contact(self, name, phone):
        for contact in self.contacts:
            if contact.name.lower() == name.lower() and contact.phone == phone:
                self.contacts.remove(contact)
                print(f"Contact '{name}' deleted successfully.")
                return
        print(f"Contact '{name}' with phone number '{phone}' not found.")

# Sample usage:
def main():
    contact_book = ContactBook()

    while True:
        print("\n===== CONTACT BOOK MENU =====")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        choice = input("Enter your choice (1-6): ")

        if choice == '1':
            name = input("Enter name: ")
            phone = input("Enter phone number: ")
            email = input("Enter email: ")
            address = input("Enter address: ")
            contact_book.add_contact(name, phone, email, address)
        elif choice == '2':
            contact_book.view_contacts()
        elif choice == '3':
            search_query = input("Enter name or phone number to search: ")
            contact_book.search_contacts(search_query)
        elif choice == '4':
            name = input("Enter name of the contact to update: ")
            phone = input("Enter phone number of the contact to update: ")
            email = input("Enter new email: ")
            address = input("Enter new address: ")
            contact_book.update_contact(name, phone, email, address)
        elif choice == '5':
            name = input("Enter name of the contact to delete: ")
            phone = input("Enter phone number of the contact to delete: ")
            contact_book.delete_contact(name, phone)
        elif choice == '6':
            print("Exiting the program...")
            break
        else:
            print("Invalid choice. Please enter a number from 1 to 6.")

if __name__ == "__main__":
    main()
